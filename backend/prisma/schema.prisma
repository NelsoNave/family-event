// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        Int      @id @default(autoincrement())
  name String
  email     String   @unique
  profileImageUrl String @map("profile_image_url")

  userFamilies UserFamilies[]
  events Events[]
  eventParticipants EventParticipants[]
  participantRestrictions ParticipantRestrictions[]
  necessities Necessities[]

  @@map("users")
}

model UserFamilies {
  id        Int      @id @default(autoincrement())
  user       Users @relation(fields: [userId], references: [id])
  userId  Int    @map("user_id")
  name String
  profileImageUrl String @map("profile_image_url")

  eventParticipants EventParticipants[]

  @@map("user_families")
}

model Events {
  id        Int      @id @default(autoincrement())
  user       Users @relation(fields: [userId], references: [id])
  userId  Int    @map("user_id")
  title String
  thumbnailUrl String  @map("thumbnail_url")
  startTime DateTime  @map("start_time")
  endTime DateTime  @map("end_time")
  country String
  postalCode String  @map("postal_code")
  province String
  city String
  address1 String
  address2 String
  isAskRestrictions Boolean  @map("is_ask_restrictions")
  eventType String  @map("event_type")
  designInfo String  @map("design_info")
  theme String
  noteForThingsToBuy String  @map("note_for_things_to_buy")
  noteForNecessities String  @map("note_for_necessities")

  eventParticipants EventParticipants[]
  participantRestrictions ParticipantRestrictions[]
  necessities Necessities[]
  thingsToBuy ThingsToBuy[]
  timelines Timelines[]
  medias Medias[]

  @@map("events")
}

model EventParticipants {
  event       Events @relation(fields: [eventId], references: [id])
  eventId     Int    @map("event_id")
  user       Users @relation(fields: [userId], references: [id])
  userId  Int    @map("user_id")
  userFamilies       UserFamilies @relation(fields: [userFamilyId], references: [id])
  userFamilyId     Int    @map("user_family_id")
  isAccepted Boolean    @map("is_accepted")
  isAttended Boolean    @map("is_attended")
  
  @@unique(fields: [eventId, userId, userFamilyId], name: "event_participants_Id")

  @@map("event_participants")
}

model ParticipantRestrictions {
  id        Int      @id @default(autoincrement())
  event       Events @relation(fields: [eventId], references: [id])
  eventId     Int  @map("event_id")
  user       Users @relation(fields: [userId], references: [id])
  userId  Int    @map("user_id")
  note String

  @@map("participant_restrictions")
}

model Necessities {
  event       Events @relation(fields: [eventId], references: [id])
  eventId     Int  @map("event_id")
  user       Users @relation(fields: [userId], references: [id])
  userId  Int    @map("user_id")
  order Int
  item String
  isAdded Boolean    @map("is_added")
  
  @@unique(fields: [eventId, userId, order], name: "necessity_id")

  @@map("necessities")
}

model ThingsToBuy {
  id        Int      @id @default(autoincrement())
  event       Events @relation(fields: [eventId], references: [id])
  eventId     Int  @map("event_id")
  item String
  isPurchase Boolean    @map("is_purchase")

    @@map("things_to_buy")
}

model Timelines {
  id        Int      @id @default(autoincrement())
  event       Events @relation(fields: [eventId], references: [id])
  eventId     Int  @map("event_id")
  scheduleItem String    @map("schedule_item")
  description String
  startTime DateTime  @map("start_time")
  endTime DateTime  @map("end_time")

  @@map("timelines")
}

model Medias {
  id        Int      @id @default(autoincrement())
  event       Events @relation(fields: [eventId], references: [id])
  eventId     Int  @map("event_id")
  imageTitle String    @map("image_title")
  imageUrl String    @map("image_url")

  @@map("medias")
}